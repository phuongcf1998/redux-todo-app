{"ast":null,"code":"// const initState = {\n//   search: \"\",\n//   status: \"All\",\n//   priority: [],\n// };\n// const filterReducers = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"filter/searchFilterChange\":\n//       return {\n//         ...state,\n//         search: action.payload,\n//       };\n//     case \"filter/statusFilterChange\":\n//       return {\n//         ...state,\n//         status: action.payload,\n//       };\n//     case \"filter/priorityFilterChange\":\n//       return {\n//         ...state,\n//         priority: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// export default filterReducers;\nimport{createSlice}from\"@reduxjs/toolkit\";export var filterSlice=createSlice({name:\"filter\",initialState:{search:\"\",status:\"All\",priority:[]},reducers:{searchFilterChange:function searchFilterChange(state,action){state.search=action.payload;},statusFilterChange:function statusFilterChange(state,action){state.status=action.payload;},priorityFilterChange:function priorityFilterChange(state,action){state.priority=action.payload;}}});","map":{"version":3,"sources":["D:/F8/redux-todo/src/components/Filters/FilterSlice.js"],"names":["createSlice","filterSlice","name","initialState","search","status","priority","reducers","searchFilterChange","state","action","payload","statusFilterChange","priorityFilterChange"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAGD,WAAW,CAAC,CACrCE,IAAI,CAAE,QAD+B,CAErCC,YAAY,CAAE,CACZC,MAAM,CAAE,EADI,CAEZC,MAAM,CAAE,KAFI,CAGZC,QAAQ,CAAE,EAHE,CAFuB,CAOrCC,QAAQ,CAAE,CACRC,kBAAkB,CAAE,4BAACC,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACL,MAAN,CAAeM,MAAM,CAACC,OAAtB,CACD,CAHO,CAIRC,kBAAkB,CAAE,4BAACH,KAAD,CAAQC,MAAR,CAAmB,CACrCD,KAAK,CAACJ,MAAN,CAAeK,MAAM,CAACC,OAAtB,CACD,CANO,CAORE,oBAAoB,CAAE,8BAACJ,KAAD,CAAQC,MAAR,CAAmB,CACvCD,KAAK,CAACH,QAAN,CAAiBI,MAAM,CAACC,OAAxB,CACD,CATO,CAP2B,CAAD,CAA/B","sourcesContent":["// const initState = {\r\n//   search: \"\",\r\n//   status: \"All\",\r\n//   priority: [],\r\n// };\r\n\r\n// const filterReducers = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case \"filter/searchFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         search: action.payload,\r\n//       };\r\n\r\n//     case \"filter/statusFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         status: action.payload,\r\n//       };\r\n//     case \"filter/priorityFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         priority: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default filterReducers;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: {\r\n    search: \"\",\r\n    status: \"All\",\r\n    priority: [],\r\n  },\r\n  reducers: {\r\n    searchFilterChange: (state, action) => {\r\n      state.search = action.payload;\r\n    },\r\n    statusFilterChange: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    priorityFilterChange: (state, action) => {\r\n      state.priority = action.payload;\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}