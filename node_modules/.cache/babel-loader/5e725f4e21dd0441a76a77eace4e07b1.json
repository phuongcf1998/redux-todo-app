{"ast":null,"code":"var _jsxFileName = \"D:\\\\todo-app\\\\src\\\\components\\\\Todo\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Row, Tag, Checkbox, Button } from \"antd\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; // import { toggleTodoListStatus } from \"../../redux/actions\";\n\nimport { todoSlice } from \"./TodoSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst priorityColorMapping = {\n  High: \"red\",\n  Medium: \"blue\",\n  Low: \"gray\"\n};\nexport default function Todo(_ref) {\n  _s();\n\n  let {\n    name,\n    priority,\n    completed,\n    id\n  } = _ref;\n  const [checked, setChecked] = useState(completed);\n  const dispatch = useDispatch();\n\n  const toggleCheckbox = () => {\n    setChecked(!checked); // dispatch(toggleTodoListStatus(id));\n\n    dispatch(todoSlice.actions.toggleTodoListStatus(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    justify: \"space-between\",\n    style: {\n      marginBottom: 3,\n      ...(checked ? {\n        opacity: 0.5,\n        textDecoration: \"line-through\"\n      } : {})\n    },\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: checked,\n      onChange: toggleCheckbox,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tag, {\n      color: priorityColorMapping[priority],\n      style: {\n        margin: 0\n      },\n      children: priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"Kjem3MbZHeaFiVnnQRV9bjwDj08=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/todo-app/src/components/Todo/index.js"],"names":["Row","Tag","Checkbox","Button","useState","useDispatch","todoSlice","priorityColorMapping","High","Medium","Low","Todo","name","priority","completed","id","checked","setChecked","dispatch","toggleCheckbox","actions","toggleTodoListStatus","marginBottom","opacity","textDecoration","margin"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,QAAnB,EAA6BC,MAA7B,QAA2C,MAA3C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;;AACA,MAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,IAAI,EAAE,KADqB;AAE3BC,EAAAA,MAAM,EAAE,MAFmB;AAG3BC,EAAAA,GAAG,EAAE;AAHsB,CAA7B;AAMA,eAAe,SAASC,IAAT,OAAiD;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAAmC;AAC9D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACU,SAAD,CAAtC;AACA,QAAMI,QAAQ,GAAGb,WAAW,EAA5B;;AACA,QAAMc,cAAc,GAAG,MAAM;AAC3BF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV,CAD2B,CAE3B;;AACAE,IAAAA,QAAQ,CAACZ,SAAS,CAACc,OAAV,CAAkBC,oBAAlB,CAAuCN,EAAvC,CAAD,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,GAAD;AACE,IAAA,OAAO,EAAC,eADV;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,YAAY,EAAE,CADT;AAEL,UAAIN,OAAO,GAAG;AAAEO,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,cAAc,EAAE;AAAhC,OAAH,GAAsD,EAAjE;AAFK,KAFT;AAAA,4BAOE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAER,OAAnB;AAA4B,MAAA,QAAQ,EAAEG,cAAtC;AAAA,gBACGP;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEL,oBAAoB,CAACM,QAAD,CAAhC;AAA4C,MAAA,KAAK,EAAE;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAAnD;AAAA,gBACGZ;AADH;AAAA;AAAA;AAAA;AAAA,YAVF,eAaE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1BuBF,I;UAELN,W;;;KAFKM,I","sourcesContent":["import { Row, Tag, Checkbox ,Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { toggleTodoListStatus } from \"../../redux/actions\";\r\nimport { todoSlice } from \"./TodoSlice\";\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, priority, completed, id }) {\r\n  const [checked, setChecked] = useState(completed);\r\n  const dispatch = useDispatch();\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    // dispatch(toggleTodoListStatus(id));\r\n    dispatch(todoSlice.actions.toggleTodoListStatus(id));\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n      <Button type=\"danger\">Remove</Button>\r\n    </Row>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}