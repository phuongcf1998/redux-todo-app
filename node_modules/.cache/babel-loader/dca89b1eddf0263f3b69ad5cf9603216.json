{"ast":null,"code":"import _objectSpread from\"D:/F8/redux-todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/F8/redux-todo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Row,Tag,Checkbox,Button}from\"antd\";import{useState}from\"react\";import{useDispatch}from\"react-redux\";// import { toggleTodoListStatus } from \"../../redux/actions\";\nimport{todoSlice}from\"./TodoSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var priorityColorMapping={High:\"red\",Medium:\"blue\",Low:\"gray\"};export default function Todo(_ref){var name=_ref.name,priority=_ref.priority,completed=_ref.completed,id=_ref.id,isRemoved=_ref.isRemoved;var _useState=useState(completed),_useState2=_slicedToArray(_useState,2),checked=_useState2[0],setChecked=_useState2[1];var dispatch=useDispatch();var toggleCheckbox=function toggleCheckbox(){setChecked(!checked);// dispatch(toggleTodoListStatus(id));\ndispatch(todoSlice.actions.toggleTodoListStatus(id));};var removeTodoElement=function removeTodoElement(){dispatch(todoSlice.actions.removeTodoItem(id));};return isRemoved?null:/*#__PURE__*/_jsxs(Row,{justify:\"space-between\",style:_objectSpread({marginBottom:3},checked?{opacity:0.5,textDecoration:\"line-through\"}:{}),children:[/*#__PURE__*/_jsx(Checkbox,{checked:checked,onChange:toggleCheckbox,children:name}),/*#__PURE__*/_jsx(Tag,{color:priorityColorMapping[priority],style:{margin:0},children:priority}),/*#__PURE__*/_jsx(Button,{onClick:removeTodoElement,type:\"danger\",children:\"Remove\"})]});}","map":{"version":3,"sources":["D:/F8/redux-todo/src/components/Todo/index.js"],"names":["Row","Tag","Checkbox","Button","useState","useDispatch","todoSlice","priorityColorMapping","High","Medium","Low","Todo","name","priority","completed","id","isRemoved","checked","setChecked","dispatch","toggleCheckbox","actions","toggleTodoListStatus","removeTodoElement","removeTodoItem","marginBottom","opacity","textDecoration","margin"],"mappings":"2MAAA,OAASA,GAAT,CAAcC,GAAd,CAAmBC,QAAnB,CAA6BC,MAA7B,KAA2C,MAA3C,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA;AACA,OAASC,SAAT,KAA0B,aAA1B,C,wFACA,GAAMC,CAAAA,oBAAoB,CAAG,CAC3BC,IAAI,CAAE,KADqB,CAE3BC,MAAM,CAAE,MAFmB,CAG3BC,GAAG,CAAE,MAHsB,CAA7B,CAMA,cAAe,SAASC,CAAAA,IAAT,MAA4D,IAA5CC,CAAAA,IAA4C,MAA5CA,IAA4C,CAAtCC,QAAsC,MAAtCA,QAAsC,CAA5BC,SAA4B,MAA5BA,SAA4B,CAAjBC,EAAiB,MAAjBA,EAAiB,CAAbC,SAAa,MAAbA,SAAa,CACzE,cAA8BZ,QAAQ,CAACU,SAAD,CAAtC,wCAAOG,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CACA,GAAMe,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BF,UAAU,CAAC,CAACD,OAAF,CAAV,CACA;AACAE,QAAQ,CAACb,SAAS,CAACe,OAAV,CAAkBC,oBAAlB,CAAuCP,EAAvC,CAAD,CAAR,CACD,CAJD,CAKA,GAAMQ,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BJ,QAAQ,CAACb,SAAS,CAACe,OAAV,CAAkBG,cAAlB,CAAiCT,EAAjC,CAAD,CAAR,CACD,CAFD,CAIA,MAAOC,CAAAA,SAAS,CAAG,IAAH,cACd,MAAC,GAAD,EACE,OAAO,CAAC,eADV,CAEE,KAAK,gBACHS,YAAY,CAAE,CADX,EAECR,OAAO,CAAG,CAAES,OAAO,CAAE,GAAX,CAAgBC,cAAc,CAAE,cAAhC,CAAH,CAAsD,EAF9D,CAFP,wBAOE,KAAC,QAAD,EAAU,OAAO,CAAEV,OAAnB,CAA4B,QAAQ,CAAEG,cAAtC,UACGR,IADH,EAPF,cAUE,KAAC,GAAD,EAAK,KAAK,CAAEL,oBAAoB,CAACM,QAAD,CAAhC,CAA4C,KAAK,CAAE,CAAEe,MAAM,CAAE,CAAV,CAAnD,UACGf,QADH,EAVF,cAaE,KAAC,MAAD,EAAQ,OAAO,CAAEU,iBAAjB,CAAoC,IAAI,CAAC,QAAzC,oBAbF,GADF,CAmBD","sourcesContent":["import { Row, Tag, Checkbox, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { toggleTodoListStatus } from \"../../redux/actions\";\r\nimport { todoSlice } from \"./TodoSlice\";\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, priority, completed, id, isRemoved }) {\r\n  const [checked, setChecked] = useState(completed);\r\n  const dispatch = useDispatch();\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    // dispatch(toggleTodoListStatus(id));\r\n    dispatch(todoSlice.actions.toggleTodoListStatus(id));\r\n  };\r\n  const removeTodoElement = () => {\r\n    dispatch(todoSlice.actions.removeTodoItem(id));\r\n  };\r\n\r\n  return isRemoved ? null : (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n      <Button onClick={removeTodoElement} type=\"danger\">\r\n        Remove\r\n      </Button>\r\n    </Row>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}