{"ast":null,"code":"// const initState = {\n//   search: \"\",\n//   status: \"All\",\n//   priority: [],\n// };\n// const filterReducers = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"filter/searchFilterChange\":\n//       return {\n//         ...state,\n//         search: action.payload,\n//       };\n//     case \"filter/statusFilterChange\":\n//       return {\n//         ...state,\n//         status: action.payload,\n//       };\n//     case \"filter/priorityFilterChange\":\n//       return {\n//         ...state,\n//         priority: action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n// export default filterReducers;\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState: {\n    search: \"\",\n    status: \"All\",\n    priority: []\n  },\n  reducers: {\n    searchFilterChange: (state, action) => {\n      state.search = action.payload;\n    },\n    statusFilterChange: (state, action) => {\n      state.status = action.payload;\n    },\n    priorityFilterChange: (state, action) => {\n      state.priority = action.payload;\n    }\n  }\n});\nexport default filterSlice;","map":{"version":3,"sources":["D:/todo-app/src/components/Filters/FilterSlice.js"],"names":["createSlice","filterSlice","name","initialState","search","status","priority","reducers","searchFilterChange","state","action","payload","statusFilterChange","priorityFilterChange"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,WAAW,GAAGD,WAAW,CAAC;AAC9BE,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,MAAM,EAAE,KAFI;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAFgB;AAO9BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACC,OAAtB;AACD,KAHO;AAIRC,IAAAA,kBAAkB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACJ,MAAN,GAAeK,MAAM,CAACC,OAAtB;AACD,KANO;AAORE,IAAAA,oBAAoB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;AACD;AATO;AAPoB,CAAD,CAA/B;AAoBA,eAAeV,WAAf","sourcesContent":["// const initState = {\r\n//   search: \"\",\r\n//   status: \"All\",\r\n//   priority: [],\r\n// };\r\n\r\n// const filterReducers = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case \"filter/searchFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         search: action.payload,\r\n//       };\r\n\r\n//     case \"filter/statusFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         status: action.payload,\r\n//       };\r\n//     case \"filter/priorityFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         priority: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default filterReducers;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: {\r\n    search: \"\",\r\n    status: \"All\",\r\n    priority: [],\r\n  },\r\n  reducers: {\r\n    searchFilterChange: (state, action) => {\r\n      state.search = action.payload;\r\n    },\r\n    statusFilterChange: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    priorityFilterChange: (state, action) => {\r\n      state.priority = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default filterSlice"]},"metadata":{},"sourceType":"module"}