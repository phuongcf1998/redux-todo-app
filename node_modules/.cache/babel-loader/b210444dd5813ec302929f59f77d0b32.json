{"ast":null,"code":"// const initState = [\n//   { id: 1, name: \"Studying\", completed: false, priority: \"Medium\" },\n//   { id: 2, name: \"Play game\", completed: true, priority: \"Low\" },\n//   { id: 3, name: \"Watch movie\", completed: false, priority: \"High\" },\n// ];\n// const todoReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"todoList/addTodo\":\n//       return [...state, action.payload];\n//     case \"todoList/toggleTodoListStatus\":\n//       return [...state, action.payload];\n//     default:\n//       return state.map((todo) =>\n//         todo.id === action.payload\n//           ? {\n//               ...state,\n//               completed: !todo.completed,\n//             }\n//           : todo\n//       );\n//   }\n// };\n// export default todoReducer;\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const todoSlice = createSlice({\n  name: \"todoList\",\n  initialState: JSON.parse(localStorage.getItem(\"list-todo\")) || [],\n  // [\n  //   {\n  //     id: 1,\n  //     name: \"Studying\",\n  //     completed: false,\n  //     priority: \"Medium\",\n  //     isRemoved: false,\n  //   },\n  //   {\n  //     id: 2,\n  //     name: \"Play game\",\n  //     completed: true,\n  //     priority: \"Low\",\n  //     isRemoved: false,\n  //   },\n  //   {\n  //     id: 3,\n  //     name: \"Watch movie\",\n  //     completed: false,\n  //     priority: \"High\",\n  //     isRemoved: false,\n  //   },\n  // ],\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\n    },\n    toggleTodoListStatus: (state, action) => {\n      const currentTodo = state.find(todo => todo.id === action.payload);\n      currentTodo.completed = !currentTodo.completed;\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\n    },\n    removeTodoItem: (state, action) => {\n      const removeItem = state.find(todo => todo.id === action.payload);\n      removeItem.isRemoved = true;\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\n    }\n  }\n});","map":{"version":3,"sources":["D:/todo-app/src/components/Todo/TodoSlice.js"],"names":["createSlice","todoSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addTodo","state","action","push","payload","setItem","stringify","toggleTodoListStatus","currentTodo","find","todo","id","completed","removeTodoItem","removeItem","isRemoved"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,UAD6B;AAEnCC,EAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD,EAF5B;AAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1BD,MAAAA,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB;AACAP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCV,IAAI,CAACW,SAAL,CAAeL,KAAf,CAAlC;AACD,KAJO;AAKRM,IAAAA,oBAAoB,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACvC,YAAMM,WAAW,GAAGP,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACE,OAAxC,CAApB;AACAI,MAAAA,WAAW,CAACI,SAAZ,GAAwB,CAACJ,WAAW,CAACI,SAArC;AACAf,MAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCV,IAAI,CAACW,SAAL,CAAeL,KAAf,CAAlC;AACD,KATO;AAURY,IAAAA,cAAc,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAMY,UAAU,GAAGb,KAAK,CAACQ,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACE,OAAxC,CAAnB;AACAU,MAAAA,UAAU,CAACC,SAAX,GAAuB,IAAvB;AACAlB,MAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCV,IAAI,CAACW,SAAL,CAAeL,KAAf,CAAlC;AACD;AAdO;AA3ByB,CAAD,CAA7B","sourcesContent":["// const initState = [\r\n//   { id: 1, name: \"Studying\", completed: false, priority: \"Medium\" },\r\n//   { id: 2, name: \"Play game\", completed: true, priority: \"Low\" },\r\n//   { id: 3, name: \"Watch movie\", completed: false, priority: \"High\" },\r\n// ];\r\n// const todoReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case \"todoList/addTodo\":\r\n//       return [...state, action.payload];\r\n\r\n//     case \"todoList/toggleTodoListStatus\":\r\n//       return [...state, action.payload];\r\n//     default:\r\n//       return state.map((todo) =>\r\n//         todo.id === action.payload\r\n//           ? {\r\n//               ...state,\r\n//               completed: !todo.completed,\r\n//             }\r\n//           : todo\r\n//       );\r\n//   }\r\n// };\r\n\r\n// export default todoReducer;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState: JSON.parse(localStorage.getItem(\"list-todo\")) || [],\r\n\r\n  // [\r\n  //   {\r\n  //     id: 1,\r\n  //     name: \"Studying\",\r\n  //     completed: false,\r\n  //     priority: \"Medium\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     name: \"Play game\",\r\n  //     completed: true,\r\n  //     priority: \"Low\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     name: \"Watch movie\",\r\n  //     completed: false,\r\n  //     priority: \"High\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  // ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    toggleTodoListStatus: (state, action) => {\r\n      const currentTodo = state.find((todo) => todo.id === action.payload);\r\n      currentTodo.completed = !currentTodo.completed;\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    removeTodoItem: (state, action) => {\r\n      const removeItem = state.find((todo) => todo.id === action.payload);\r\n      removeItem.isRemoved = true;\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}