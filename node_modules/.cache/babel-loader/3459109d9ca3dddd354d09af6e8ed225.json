{"ast":null,"code":"import { createSelector } from \"reselect\";\nexport const todoListSelector = state => state.todoList;\nexport const statusFilterSelector = state => state.filter.status;\nexport const searchTextSelector = state => state.filter.search;\nexport const todoListRemainSelector = createSelector(todoListSelector, statusFilterSelector, searchTextSelector, (todoList, status, searchText) => {\n  return todoList.filter(todo => {\n    if (status === \"All\") {\n      return todo.name.includes(searchText);\n    }\n\n    return todo.name.includes(searchText) && (status === \"Completed\" ? todo.completed : !todo.completed);\n  });\n});","map":{"version":3,"sources":["D:/todo-app/src/redux/selector.js"],"names":["createSelector","todoListSelector","state","todoList","statusFilterSelector","filter","status","searchTextSelector","search","todoListRemainSelector","searchText","todo","name","includes","completed"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAWA,KAAK,CAACC,QAA1C;AAEP,OAAO,MAAMC,oBAAoB,GAAIF,KAAD,IAAWA,KAAK,CAACG,MAAN,CAAaC,MAArD;AAEP,OAAO,MAAMC,kBAAkB,GAAIL,KAAD,IAAWA,KAAK,CAACG,MAAN,CAAaG,MAAnD;AAEP,OAAO,MAAMC,sBAAsB,GAAGT,cAAc,CAClDC,gBADkD,EAElDG,oBAFkD,EAGlDG,kBAHkD,EAIlD,CAACJ,QAAD,EAAWG,MAAX,EAAmBI,UAAnB,KAAkC;AAChC,SAAOP,QAAQ,CAACE,MAAT,CAAiBM,IAAD,IAAU;AAC/B,QAAIL,MAAM,KAAK,KAAf,EAAsB;AACpB,aAAOK,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBH,UAAnB,CAAP;AACD;;AACD,WACEC,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBH,UAAnB,MACCJ,MAAM,KAAK,WAAX,GAAyBK,IAAI,CAACG,SAA9B,GAA0C,CAACH,IAAI,CAACG,SADjD,CADF;AAID,GARM,CAAP;AASD,CAdiD,CAA7C","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nexport const todoListSelector = (state) => state.todoList;\r\n\r\nexport const statusFilterSelector = (state) => state.filter.status;\r\n\r\nexport const searchTextSelector = (state) => state.filter.search;\r\n\r\nexport const todoListRemainSelector = createSelector(\r\n  todoListSelector,\r\n  statusFilterSelector,\r\n  searchTextSelector,\r\n  (todoList, status, searchText) => {\r\n    return todoList.filter((todo) => {\r\n      if (status === \"All\") {\r\n        return todo.name.includes(searchText);\r\n      }\r\n      return (\r\n        todo.name.includes(searchText) &&\r\n        (status === \"Completed\" ? todo.completed : !todo.completed)\r\n      );\r\n    });\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}