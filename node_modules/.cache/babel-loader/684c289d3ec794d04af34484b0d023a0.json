{"ast":null,"code":"// const initState = [\n//   { id: 1, name: \"Studying\", completed: false, priority: \"Medium\" },\n//   { id: 2, name: \"Play game\", completed: true, priority: \"Low\" },\n//   { id: 3, name: \"Watch movie\", completed: false, priority: \"High\" },\n// ];\n// const todoReducer = (state = initState, action) => {\n//   switch (action.type) {\n//     case \"todoList/addTodo\":\n//       return [...state, action.payload];\n//     case \"todoList/toggleTodoListStatus\":\n//       return [...state, action.payload];\n//     default:\n//       return state.map((todo) =>\n//         todo.id === action.payload\n//           ? {\n//               ...state,\n//               completed: !todo.completed,\n//             }\n//           : todo\n//       );\n//   }\n// };\n// export default todoReducer;\nimport{createSlice}from\"@reduxjs/toolkit\";export var todoSlice=createSlice({name:\"todoList\",initialState:JSON.parse(localStorage.getItem(\"list-todo\"))||[],// [\n//   {\n//     id: 1,\n//     name: \"Studying\",\n//     completed: false,\n//     priority: \"Medium\",\n//     isRemoved: false,\n//   },\n//   {\n//     id: 2,\n//     name: \"Play game\",\n//     completed: true,\n//     priority: \"Low\",\n//     isRemoved: false,\n//   },\n//   {\n//     id: 3,\n//     name: \"Watch movie\",\n//     completed: false,\n//     priority: \"High\",\n//     isRemoved: false,\n//   },\n// ],\nreducers:{addTodo:function addTodo(state,action){state.push(action.payload);localStorage.setItem(\"list-todo\",JSON.stringify(state));},toggleTodoListStatus:function toggleTodoListStatus(state,action){var currentTodo=state.find(function(todo){return todo.id===action.payload;});currentTodo.completed=!currentTodo.completed;localStorage.setItem(\"list-todo\",JSON.stringify(state));},removeTodoItem:function removeTodoItem(state,action){var removeItem=state.find(function(todo){return todo.id===action.payload;});removeItem.isRemoved=true;localStorage.setItem(\"list-todo\",JSON.stringify(state));},removeAll:function removeAll(state,action){state.length=0;localStorage.clear();}}});","map":{"version":3,"sources":["D:/F8/redux-todo/src/components/Todo/TodoSlice.js"],"names":["createSlice","todoSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addTodo","state","action","push","payload","setItem","stringify","toggleTodoListStatus","currentTodo","find","todo","id","completed","removeTodoItem","removeItem","isRemoved","removeAll","length","clear"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CACnCE,IAAI,CAAE,UAD6B,CAEnCC,YAAY,CAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,GAAiD,EAF5B,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,QAAQ,CAAE,CACRC,OAAO,CAAE,iBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1BD,KAAK,CAACE,IAAN,CAAWD,MAAM,CAACE,OAAlB,EACAP,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAkCV,IAAI,CAACW,SAAL,CAAeL,KAAf,CAAlC,EACD,CAJO,CAKRM,oBAAoB,CAAE,8BAACN,KAAD,CAAQC,MAAR,CAAmB,CACvC,GAAMM,CAAAA,WAAW,CAAGP,KAAK,CAACQ,IAAN,CAAW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYT,MAAM,CAACE,OAA7B,EAAX,CAApB,CACAI,WAAW,CAACI,SAAZ,CAAwB,CAACJ,WAAW,CAACI,SAArC,CACAf,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAkCV,IAAI,CAACW,SAAL,CAAeL,KAAf,CAAlC,EACD,CATO,CAURY,cAAc,CAAE,wBAACZ,KAAD,CAAQC,MAAR,CAAmB,CACjC,GAAMY,CAAAA,UAAU,CAAGb,KAAK,CAACQ,IAAN,CAAW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYT,MAAM,CAACE,OAA7B,EAAX,CAAnB,CACAU,UAAU,CAACC,SAAX,CAAuB,IAAvB,CACAlB,YAAY,CAACQ,OAAb,CAAqB,WAArB,CAAkCV,IAAI,CAACW,SAAL,CAAeL,KAAf,CAAlC,EACD,CAdO,CAeRe,SAAS,CAAE,mBAACf,KAAD,CAAQC,MAAR,CAAmB,CAC5BD,KAAK,CAACgB,MAAN,CAAe,CAAf,CACApB,YAAY,CAACqB,KAAb,GACD,CAlBO,CA3ByB,CAAD,CAA7B","sourcesContent":["// const initState = [\r\n//   { id: 1, name: \"Studying\", completed: false, priority: \"Medium\" },\r\n//   { id: 2, name: \"Play game\", completed: true, priority: \"Low\" },\r\n//   { id: 3, name: \"Watch movie\", completed: false, priority: \"High\" },\r\n// ];\r\n// const todoReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case \"todoList/addTodo\":\r\n//       return [...state, action.payload];\r\n\r\n//     case \"todoList/toggleTodoListStatus\":\r\n//       return [...state, action.payload];\r\n//     default:\r\n//       return state.map((todo) =>\r\n//         todo.id === action.payload\r\n//           ? {\r\n//               ...state,\r\n//               completed: !todo.completed,\r\n//             }\r\n//           : todo\r\n//       );\r\n//   }\r\n// };\r\n\r\n// export default todoReducer;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState: JSON.parse(localStorage.getItem(\"list-todo\")) || [],\r\n\r\n  // [\r\n  //   {\r\n  //     id: 1,\r\n  //     name: \"Studying\",\r\n  //     completed: false,\r\n  //     priority: \"Medium\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     name: \"Play game\",\r\n  //     completed: true,\r\n  //     priority: \"Low\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     name: \"Watch movie\",\r\n  //     completed: false,\r\n  //     priority: \"High\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  // ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    toggleTodoListStatus: (state, action) => {\r\n      const currentTodo = state.find((todo) => todo.id === action.payload);\r\n      currentTodo.completed = !currentTodo.completed;\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    removeTodoItem: (state, action) => {\r\n      const removeItem = state.find((todo) => todo.id === action.payload);\r\n      removeItem.isRemoved = true;\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    removeAll: (state, action) => {\r\n      state.length = 0;\r\n      localStorage.clear();\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}