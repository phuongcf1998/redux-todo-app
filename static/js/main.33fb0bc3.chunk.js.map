{"version":3,"sources":["components/Todo/TodoSlice.js","components/Todo/index.js","redux/selector.js","components/TodoList/index.js","components/Filters/FilterSlice.js","components/Filters/index.js","App.js","redux/store.js","index.js"],"names":["todoSlice","createSlice","name","initialState","JSON","parse","localStorage","getItem","reducers","addTodo","state","action","push","payload","setItem","stringify","toggleTodoListStatus","currentTodo","find","todo","id","completed","removeTodoItem","isRemoved","removeAll","length","clear","priorityColorMapping","High","Medium","Low","Todo","priority","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","actions","color","margin","onClick","type","todoListRemainSelector","createSelector","todoList","filter","status","search","searchText","includes","TodoList","todoName","setTodoName","setPriority","useSelector","maxHeight","overflowY","boxSizing","border","span","height","map","index","marginTop","Group","display","compact","value","e","target","defaultValue","Option","label","uuidv4","filterSlice","searchFilterChange","statusFilterChange","priorityFilterChange","Search","Input","Filters","setSearchText","statusValue","setstatusValue","filterPriority","setfilterPriority","Paragraph","fontWeight","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33fb0bc3.chunk.js","sourcesContent":["// const initState = [\r\n//   { id: 1, name: \"Studying\", completed: false, priority: \"Medium\" },\r\n//   { id: 2, name: \"Play game\", completed: true, priority: \"Low\" },\r\n//   { id: 3, name: \"Watch movie\", completed: false, priority: \"High\" },\r\n// ];\r\n// const todoReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case \"todoList/addTodo\":\r\n//       return [...state, action.payload];\r\n\r\n//     case \"todoList/toggleTodoListStatus\":\r\n//       return [...state, action.payload];\r\n//     default:\r\n//       return state.map((todo) =>\r\n//         todo.id === action.payload\r\n//           ? {\r\n//               ...state,\r\n//               completed: !todo.completed,\r\n//             }\r\n//           : todo\r\n//       );\r\n//   }\r\n// };\r\n\r\n// export default todoReducer;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState: JSON.parse(localStorage.getItem(\"list-todo\")) || [],\r\n\r\n  // [\r\n  //   {\r\n  //     id: 1,\r\n  //     name: \"Studying\",\r\n  //     completed: false,\r\n  //     priority: \"Medium\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     name: \"Play game\",\r\n  //     completed: true,\r\n  //     priority: \"Low\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     name: \"Watch movie\",\r\n  //     completed: false,\r\n  //     priority: \"High\",\r\n  //     isRemoved: false,\r\n  //   },\r\n  // ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    toggleTodoListStatus: (state, action) => {\r\n      const currentTodo = state.find((todo) => todo.id === action.payload);\r\n      currentTodo.completed = !currentTodo.completed;\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    removeTodoItem: (state, action) => {\r\n      const removeItem = state.find((todo) => todo.id === action.payload);\r\n      removeItem.isRemoved = true;\r\n      localStorage.setItem(\"list-todo\", JSON.stringify(state));\r\n    },\r\n    removeAll: (state, action) => {\r\n      state.length = 0;\r\n      localStorage.clear();\r\n    },\r\n  },\r\n});\r\n","import { Row, Tag, Checkbox, Button } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import { toggleTodoListStatus } from \"../../redux/actions\";\r\nimport { todoSlice } from \"./TodoSlice\";\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, priority, completed, id, isRemoved }) {\r\n  const [checked, setChecked] = useState(completed);\r\n  const dispatch = useDispatch();\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    // dispatch(toggleTodoListStatus(id));\r\n    dispatch(todoSlice.actions.toggleTodoListStatus(id));\r\n  };\r\n  const removeTodoElement = () => {\r\n    dispatch(todoSlice.actions.removeTodoItem(id));\r\n  };\r\n\r\n  return isRemoved ? null : (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n      <Button onClick={removeTodoElement} type=\"danger\">\r\n        Remove\r\n      </Button>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const todoListSelector = (state) => state.todoList;\r\n\r\nexport const statusFilterSelector = (state) => state.filter.status;\r\n\r\nexport const searchTextSelector = (state) => state.filter.search;\r\n\r\nexport const priorityFilterSelector = (state) => state.filter.priority;\r\n\r\nexport const isRemoveSelector = (state) => state.filter.isRemoved;\r\n\r\nexport const todoListRemainSelector = createSelector(\r\n  todoListSelector,\r\n  statusFilterSelector,\r\n  searchTextSelector,\r\n  priorityFilterSelector,\r\n  (todoList, status, searchText, priority,isRemoved) => {\r\n    return todoList.filter((todo) => {\r\n      if(!todo.isRemoved){\r\n        if (status === \"All\") {\r\n          return priority.length\r\n            ? todo.name.includes(searchText) && priority.includes(todo.priority)\r\n            : todo.name.includes(searchText);\r\n        }\r\n        return (\r\n          todo.name.includes(searchText) &&\r\n          (status === \"Completed\" ? todo.completed : !todo.completed) &&\r\n          (priority.length ? priority.priority.includes(todo.priority) : true)\r\n        );\r\n      }\r\n    });\r\n  }\r\n);\r\n","import { Col, Row, Input, Button, Select, Tag } from \"antd\";\r\nimport Todo from \"../Todo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { addTodo } from \"../../redux/actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { todoSlice } from \"../Todo/TodoSlice\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  searchTextSelector,\r\n  todoListRemainSelector,\r\n  todoListSelector,\r\n} from \"../../redux/selector\";\r\nexport default function TodoList() {\r\n  const dispatch = useDispatch();\r\n  const [todoName, setTodoName] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"Medium\");\r\n  const todoList = useSelector(todoListRemainSelector);\r\n  // const searchText = useSelector(searchTextSelector);\r\n\r\n  const handleClickButton = () => {\r\n    // dispatch(\r\n    //   addTodo({\r\n    //     id: uuidv4(),\r\n    //     name: todoName,\r\n    //     priority: priority,\r\n    //     completed: false,\r\n    //   })\r\n    // );\r\n    dispatch(\r\n      todoSlice.actions.addTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        priority: priority,\r\n        completed: false,\r\n        isRemoved: false,\r\n      })\r\n    );\r\n    setTodoName(\"\");\r\n    setPriority(\"Medium\");\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value);\r\n  };\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value);\r\n  };\r\n  const handleClearButton = () => {\r\n    dispatch(todoSlice.actions.removeAll());\r\n  };\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          maxHeight: \"150px\",\r\n          overflowY: \"auto\",\r\n          boxSizing: \"border-box\",\r\n          border: \"1px solid #fff\"\r\n        }}\r\n      >\r\n        <Col span={24} style={{ height: \"calc(100% - 40px)\" }}>\r\n          {todoList.map((todo, index) => (\r\n            <Todo\r\n              key={index}\r\n              id={todo.id}\r\n              name={todo.name}\r\n              priority={todo.priority}\r\n              completed={todo.completed}\r\n            />\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n      <Row style={\r\n        {marginTop:'10px'}\r\n      } >\r\n        <Col span={24}>\r\n          <Input.Group style={{ display: \"flex\" }} compact>\r\n            <Input value={todoName} onChange={handleInputChange} />\r\n            <Select\r\n              defaultValue=\"Medium\"\r\n              value={priority}\r\n              onChange={handlePriorityChange}\r\n            >\r\n              <Select.Option value=\"High\" label=\"High\">\r\n                <Tag color=\"red\">High</Tag>\r\n              </Select.Option>\r\n              <Select.Option value=\"Medium\" label=\"Medium\">\r\n                <Tag color=\"blue\">Medium</Tag>\r\n              </Select.Option>\r\n              <Select.Option value=\"Low\" label=\"Low\">\r\n                <Tag color=\"gray\">Low</Tag>\r\n              </Select.Option>\r\n            </Select>\r\n            <Button type=\"primary\" onClick={handleClickButton}>\r\n              Add\r\n            </Button>\r\n            <Button type=\"danger\" onClick={handleClearButton}>\r\n              Clear All\r\n            </Button>\r\n          </Input.Group>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","// const initState = {\r\n//   search: \"\",\r\n//   status: \"All\",\r\n//   priority: [],\r\n// };\r\n\r\n// const filterReducers = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case \"filter/searchFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         search: action.payload,\r\n//       };\r\n\r\n//     case \"filter/statusFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         status: action.payload,\r\n//       };\r\n//     case \"filter/priorityFilterChange\":\r\n//       return {\r\n//         ...state,\r\n//         priority: action.payload,\r\n//       };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default filterReducers;\r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: {\r\n    search: \"\",\r\n    status: \"All\",\r\n    priority: [],\r\n  },\r\n  reducers: {\r\n    searchFilterChange: (state, action) => {\r\n      state.search = action.payload;\r\n    },\r\n    statusFilterChange: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    priorityFilterChange: (state, action) => {\r\n      state.priority = action.payload;\r\n    },\r\n  },\r\n});\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import {\r\n//   priorityFilterChange,\r\n//   searchFilterChange,\r\n//   statusFilterChange,\r\n// } from \"../../redux/actions\";\r\nimport { filterSlice } from \"./FilterSlice\";\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [statusValue, setstatusValue] = useState(\"All\");\r\n  const [filterPriority, setfilterPriority] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearchFilter = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(filterSlice.actions.searchFilterChange(e.target.value));\r\n    // dispatch(searchFilterChange(e.target.value));\r\n  };\r\n  const handlestatusValueChange = (e) => {\r\n    setstatusValue(e.target.value);\r\n    dispatch(filterSlice.actions.statusFilterChange(e.target.value));\r\n    // dispatch(statusFilterChange(e.target.value));\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setfilterPriority(value);\r\n    dispatch(filterSlice.actions.priorityFilterChange(value));\r\n    // dispatch(priorityFilterChange(value));\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          value={searchText}\r\n          onChange={handleSearchFilter}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={statusValue} onChange={handlestatusValueChange}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please select\"\r\n          style={{ width: \"100%\" }}\r\n          value={filterPriority}\r\n          onChange={handlePriorityChange}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport Filters from './components/Filters';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 500,\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        padding: 20,\r\n        boxShadow: '0 0 10px 4px #bfbfbf',\r\n        borderRadius: 5,\r\n        height: '90vh',\r\n      \r\n        \r\n      }}\r\n    >\r\n      <Title style={{ textAlign: 'center' }}>TODO APP REDUX Made by phuongcf1998</Title>\r\n      <Filters />\r\n      <Divider />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// import { createStore } from \"redux\";\r\n// import rootReducer from \"./reducer\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const composeEnhancers = composeWithDevTools();\r\n\r\n// const store = createStore(rootReducer,composeEnhancers);\r\n\r\n// export default store;\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport {filterSlice} from \"../components/Filters/FilterSlice\";\r\nimport {todoSlice} from \"../components/Todo/TodoSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    filter: filterSlice.reducer,\r\n    todoList: todoSlice.reducer,\r\n  },\r\n});\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}